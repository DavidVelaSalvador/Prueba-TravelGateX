<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Btn_Get_Data.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qQAAAABJRU5ErkJggg==
</value>
  </data>
</root>